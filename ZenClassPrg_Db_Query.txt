1. //Find all the topics and tasks taught in the month of October:

db.Task.aggregate([
  {
    $lookup: {
      from: "Topic",
      localField: "topicId",
      foreignField: "_id",
      as: "topicInfo"
    }
  },
  {
    $unwind: "$topicInfo"
  },
  {
    $match: {
      $expr: {
        $eq: [{ $month: "$date" }, 10]
      }
    }
  },
  {
    $project: {
      _id: 0,
      Topic: "$topicInfo.Topic",
      Task: "$Task"
    }
  }
])


[
  { Topic: 'HTML', Task: 'Create a HTML' },
  { Topic: 'DOM', Task: 'Create a DOM' },
  { Topic: 'CSS', Task: 'Create a CSS' }
]


2. //Find all the company drives that appeared between 15th October 2020 and 31st October 2020:

ZenClassProgramme> db.Company.find({date:{$gte: ISODate("2020-10-15"), $lte: ISODate("2020-10-31")}})

[
  {
    _id: ObjectId("65454b928805a177cb4f11cc"),
    name: 'Comp_drive1',
    date: ISODate("2020-10-25T00:00:00.000Z")
  },
  {
    _id: ObjectId("65454b928805a177cb4f11ce"),
    name: 'Comp_drive3',
    date: ISODate("2020-10-31T00:00:00.000Z")
  },
  {
    _id: ObjectId("65454b928805a177cb4f11cf"),
    name: 'Comp_drive4',
    date: ISODate("2020-10-24T00:00:00.000Z")
  },
  {
    _id: ObjectId("65454b928805a177cb4f11d0"),
    name: 'Comp_drive5',
    date: ISODate("2020-10-17T00:00:00.000Z")
  }
]


3. // Find all the company drives and students who appeared for placement:


db.Company.aggregate([
  {
    $lookup: {
      from: "Attendance",
      localField: "date",
      foreignField: "Date",
      as: "attendanceInfo"
    }
  },
  {
    $unwind: "$attendanceInfo"
  },
  {
    $lookup: {
      from: "Users",
      localField: "attendanceInfo.userId",
      foreignField: "_id",
      as: "studentInfo"
    }
  },
  {
    $unwind: "$studentInfo"
  },
  {
    $match: {
      "attendanceInfo.Status": "Present"
    }
  },
  {
    $project: {
      _id: 0,
      DriveName: "$name",
      StudentName: "$studentInfo.Name"
    }
  }
])



[ { DriveName: 'Comp_drive2', StudentName: 'Arun' } ]



4. // Find the number of problems solved by the user in CodeKata:


db.Users.aggregate([
  {
    $lookup: {
      from: "CodeKata",
      localField: "_id",
      foreignField: "userId",
      as: "kataInfo"
    }
  },
  {
    $unwind: "$kataInfo"
  },
  {
    $project: {
      _id: 0,
      UserName: "$Name",
      ProblemsSolved: "$kataInfo.Pb_Solved"
    }
  }
])


[
  { UserName: 'varun', ProblemSolved: '100' },
  { UserName: 'Arunima', ProblemSolved: '230' },
  { UserName: 'sharun', ProblemSolved: '300' },
  { UserName: 'kirun', ProblemSolved: '150' },
  { UserName: 'Arun', ProblemSolved: '60' }
]





5. //Find all the mentors with a mentee count greater than 15:


ZenClassProgramme> db.Mentor.find({Mentees:{$gt:15}})

[
  {
    _id: ObjectId("65454ca18805a177cb4f11d3"),
    name: 'Mentor3',
    Mentees: 40
  },
  {
    _id: ObjectId("65454ca18805a177cb4f11d4"),
    name: 'Mentor4',
    Mentees: 25
  }
]


6. // Find the number of users who were absent and didn't submit a task between 15th October 2020 and 31st October 2020:


db.Users.aggregate([
  {
    $lookup: {
      from: "Attendance",
      localField: "_id",
      foreignField: "userId",
      as: "attendanceInfo"
    }
  },
  {
    $unwind: "$attendanceInfo"
  },
  {
    $lookup: {
      from: "Tasks",
      let: { userId: "$_id" },
      pipeline: [
        {
          $match: {
            $expr: {
              $and: [
                { $eq: ["$userId", "$$userId"] },
                { $lt: ["$date", ISODate("2020-11-01")] },
                { $gte: ["$date", ISODate("2020-10-15")] }
              ]
            }
          }
        }
      ],
      as: "taskInfo"
    }
  },
  {
    $match: {
      "attendanceInfo.Status": "Absent",
      "taskInfo": { $size: 0 }
    }
  },
  {
    $group: {
      _id: null,
      Count: { $sum: 1 }
    }
  },
  {
    $project: {
      _id: 0,
      Count: 1
    }
  }
])


[ { Count: 2 } ]




























